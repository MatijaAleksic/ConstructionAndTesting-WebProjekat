/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/

package kts.restaurant_application.services;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

import kts.restaurant_application.model.MainCook;
import kts.restaurant_application.repositories.MainCookRepository;

@Service
public class MainCookService {
    private static final Logger logger = LoggerFactory.getLogger(MainCookService.class);

    private final MainCookRepository repository;

    @Autowired
    public MainCookService(MainCookRepository repository) {
        this.repository = repository;
    }

    public Iterable<MainCook> findAll() {
        return repository.findAll();
    }

    public MainCook findOne(Long id) {
        return repository
                .findById(id)
                .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND,
                        "Cannot find MainCook by " + id));
    }

    public MainCook save(MainCook entity) {
        return repository.save(entity);
    }

    public void delete(MainCook entity) {
        repository.delete(entity);
    }

    public void delete(Long id) {
        delete(findOne(id));
    }
}